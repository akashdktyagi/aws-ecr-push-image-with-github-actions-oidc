# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
#    defaults:
#      run:
#        working-directory: 'ui'
    runs-on: ubuntu-latest

  # this is required to make use of GitHub OIDC to connect to AWS ECR resource
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: npm ci
#      working-directory: ui
      run: | 
        npm ci

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::930117237186:role/roleforpushingimage
        role-duration-seconds: 900 # the ttl of the session, in seconds.
        aws-region: us-east-1 # use your region here.

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: z3i9f6u3
        REPOSITORY: doctor-everywhere-ui
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f Dockerfile -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
#        docker build -f Dockerfile -t public.ecr.aws/z3i9f6u3/doctor-everywhere-ui:latest .
#        docker push public.ecr.aws/z3i9f6u3/doctor-everywhere-ui:latest


